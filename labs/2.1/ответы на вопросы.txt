 Для чего нужны роли?
Роли нужны для управления доступом к объектам базы данных.

 Что такое схема?
Схема - это пространство имен для объектов базы данных.

 Рассказать про директивы GRANT и REVOKE.
GRANT и REVOKE - директивы для предоставления
 и отзыва привилегий пользователям и ролям.

Для чего нужна роль PUBLIC?
Роль PUBLIC нужна для предоставления привилегий всем пользователям в базе данных.

 Как добавить нового пользователя в текущую базу данных? Как
позволить пользователю заходить на сервер?
Чтобы добавить нового пользователя, нужно создать для него новую
роль и назначить ей привилегии. Для разрешения доступа к
серверу необходимо настроить аутентификацию и авторизацию.

 Какие существуют права?
Существуют права на чтение,
обновление, удаление, создание объектов базы данных.


Сменить владельца базы данных.
Чтобы сменить владельца базы данных в PostgreSQL,ё
 можно использовать команду ALTER DATABASE и
 указать нового владельца в параметре OWNER.

 Сменить пароль для пользователя.
Для смены пароля пользователя в PostgreSQL можно
использовать команду ALTER USER и указать новый пароль в параметре PASSWORD.

 Определить роль с заданными правами.
Чтобы определить роль с заданными правами в PostgreSQL, можно использовать команду
CREATE ROLE с определением прав в параметре GRANTED PRIVILEGES.

 Объяснить, как работают написанные запросы.
 Рассказать о CHECK OPTION.
CREATE VIEW sales_employees AS
SELECT * FROM employees WHERE department = 'Sales'
WITH CHECK OPTION;

 Рассказать о модификации данных через представления.
Вот пример обновления данных через представление с помощью правил (rules)
CREATE RULE update_sales_employees AS ON UPDATE TO sales_employees DO INSTEAD (
    UPDATE employees SET salary = NEW.salary WHERE id = OLD.id
);

 Рассказать о вставке данных через представления.
-- Создаем правило для вставки данных в представление
CREATE RULE insert_sales_employees AS ON INSERT TO sales_employees DO INSTEAD (
    INSERT INTO employees (name, department, salary) VALUES (NEW.name, NEW.department, NEW.salary)
);

